/*
 * tests/proxy/WriteThruProxyUTest.cxxtest
 *
 * Copyright (C) 2016, 2022 Linas Vepstas
 * All Rights Reserved
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <thread>
#include <unistd.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <time.h>

#include <opencog/util/Config.h>
#include <opencog/cogserver/server/CogServer.h>

using namespace opencog;

class WriteThruProxyUTest :  public CxxTest::TestSuite
{
private:
	CogServer* csrv;
	std::thread* main_loop;

public:

	WriteThruProxyUTest()
	{
		logger().set_level(Logger::DEBUG);
		//logger().set_print_to_stdout_flag(true);
	}

	~WriteThruProxyUTest()
	{
		// erase the log file if no assertions failed
		if (!CxxTest::TestTracker::tracker().suiteFailed())
			std::remove(logger().get_filename().c_str());
	}

	void setUp()
	{
		csrv = &cogserver();
		csrv->loadModules();
		csrv->enableNetworkServer(17444);
		main_loop = new std::thread(&CogServer::serverLoop, csrv);

		// Wait for the cogserver to finish initializing.
		sleep(1);
	}

	void tearDown()
	{
		csrv->stop();
		main_loop->join();
		delete main_loop;
	}

	void test_set_tv()
	{
		logger().debug("BEGIN TEST: %s", __FUNCTION__);

		int rc = system("echo 'config SexprShellModule libwthru-proxy.so\n' | nc -q 0 localhost 17444");
		if (rc != 0) printf("Error: config failed\n");
		TS_ASSERT_EQUALS(rc, 0);

		logger().debug("END TEST: %s", __FUNCTION__);
	}
};
